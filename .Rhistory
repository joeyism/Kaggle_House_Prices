source("house_prices.R")
source("house_prices.R")
train
train$LotFrontage == "NA"
is.na(train$LotFrontage)
is.na(train$LotFrontage) <- median(train$LotFrontage)
train$LotFrontage
train$LotFrontage[is.na(train$LotFrontage)] <- median(train$LotFrontage)
train$LotFrontage
train$LotFrontage[8]
median(train$LotFrontage)
median(train$LotFrontage, na.rm = TRUE)
train$LotFrontage[is.na(train$LotFrontage)] <- median(train$LotFrontage, na.rm = TRUE)
median(train$LotFrontage, na.rm = TRUE)
train$LotFrontage
source("house_prices.R")
source("house_prices.R")
train$Alley[is.na(train$Alley)] <- "None"
train$Alley[is.na(train$Alley)]
is.na(train$Alley)
train$Alley[is.na(train$Alley)]
train$Alley[is.na(train$Alley)] <- "None"
source("house_prices.R")
source("house_prices.R")
is.na(train)
is.na(train$LotArea)
source("house_prices.R")
addNoneAsFactor
train$Alley <- as.data.frame(lapply(train$Alley, addNoneAsFactor))
source("house_prices.R")
source("house_prices.R")
print("rawr")
source("house_prices.R")
source("house_prices.R")
my_prediction <- predict(my_forest, test)
table(train)
table(test)
my_forest
my_prediction <- predict(my_forest, test)
levels(test$Alley)
levels(test)
levels(train$Alley)
source("house_prices.R")
traceback()
q()
source("house_prices.R")
source("house_prices.R")
source("house_prices.R")
freq(test$MSZoning)
table(test$MSZoning)
library("doSNOW")
library("doParallel")
source("house_prices.R")
q()
